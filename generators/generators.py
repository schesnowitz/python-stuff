# -*- coding: utf-8 -*-
"""generators.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1WfpL1YMBUYoaZK5OqgwWU7O0uCp7623j
"""

def square_numbers(nums):
    squared = []
    for i in nums:
        squared.append(i*i)
    return squared


list_o_nums = square_numbers([1,2,3,4,5])
print(list_o_nums)
for x in list_o_nums:
    print(x)

"""As a generator"""

def square_numbers(nums):
    for i in nums:
        yield(i*i)

list_o_nums = square_numbers([1,2,3,4,5])
print(next(list_o_nums))
print(next(list_o_nums))

def square_numbers(nums):
    for i in nums:
        yield(i*i)

list_o_nums = square_numbers([1,2,3,4,5])

for x in list_o_nums:
    print(x)

"""List comprehension"""

list_comp = [i*i for i in [2,3,4,5,6]]
print(list_comp)
for x in list_comp:
    print(x)

"""chage to parenthasis for generator"""



list_comp = (i*i for i in [2,3,4,5,6])


print(list_comp)
print(next(list_comp))
print(next(list_comp))
# for x in list_comp:
#     print(x)